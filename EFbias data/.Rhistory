demo.sub2$Race_Black +
demo.sub2$Race_Island +
demo.sub2$Race_White < 9,]
View(multi)
demo.sub2[demo.sub2$Race_NoReply == 1,]
demo.sub3 = filter(demo.sub3,!(subnum %in% unique(multi$subnum)))
demo.sub3 = filter(demo.sub2,!(subnum %in% unique(multi$subnum)))
nrow(demo.sub3)
nrow(demo.sub2)
glimpse(demo.sub3)
nrow(demo.sub3[demo.sub3$Race_White == 1,]) # White
nrow(demo.sub3[demo.sub3$Race_White == 1,]) # White
nrow(demo.sub3[demo.sub3$Race_Asian == 1,]) # Asian
nrow(demo.sub3[demo.sub3$Race_tive == 1,]) # Native American
nrow(demo.sub3[demo.sub3$Race_Black == 1,]) # Black
nrow(demo.sub3[demo.sub3$Race_Island == 1,]) # Pacific Island
nrow(demo.sub3[demo.sub3$Hispanic == 1,]) # Hispanic
demo.sub3[demo.sub3$Race_Asian == 1,]
demo.sub3[demo.sub3$Race_tive == 1,]
nrow(demo.sub3[demo.sub3$Race_White == 1 & !(is.na(demo.sub3$subnum),]) # White
nrow(demo.sub3[demo.sub3$Race_Asian == 1,]) # Asian
nrow(demo.sub3[demo.sub3$Race_tive == 1,]) # Native American
nrow(demo.sub3[demo.sub3$Race_Black == 1,]) # Black
nrow(demo.sub3[demo.sub3$Race_Island == 1,]) # Pacific Island
nrow(demo.sub3[demo.sub3$Hispanic == 1,]) # Hispanic
nrow(demo.sub3[demo.sub3$Race_White == 1 & !(is.na(demo.sub3$subnum)),]) # White
nrow(demo.sub3[demo.sub3$Race_White == 1 & !(is.na(demo.sub3$subnum)),]) # White
nrow(demo.sub3[demo.sub3$Race_Asian == 1 & !(is.na(demo.sub3$subnum)),]) # Asian
nrow(demo.sub3[demo.sub3$Race_tive == 1 & !(is.na(demo.sub3$subnum)),]) # Native American
nrow(demo.sub3[demo.sub3$Race_Black == 1 & !(is.na(demo.sub3$subnum)),]) # Black
nrow(demo.sub3[demo.sub3$Race_Island == 1 & !(is.na(demo.sub3$subnum)),]) # Pacific Island
demo.sub3[demo.sub3$Race_Asian == 1 & !(is.na(demo.sub3$subnum)),]
length(demo.sub3$subnum[demo.sub3$Race_White == 1 & !(is.na(demo.sub3$subnum))]) # White
length(unique(demo.sub3$subnum[demo.sub3$Race_Asian == 1 & !(is.na(demo.sub3$subnum))]) # Asian
nrow(demo.sub3[demo.sub3$Race_tive == 1 & !(is.na(demo.sub3$subnum)),]) # Native American
nrow(demo.sub3[demo.sub3$Race_Black == 1 & !(is.na(demo.sub3$subnum)),]) # Black
nrow(demo.sub3[demo.sub3$Race_Island == 1 & !(is.na(demo.sub3$subnum)),]) # Pacific Island
nrow(demo.sub3[demo.sub3$Hispanic == 1,]) # Hispanic
length(unique(demo.sub3$subnum[demo.sub3$Race_Asian == 1 & !(is.na(demo.sub3$subnum))])) # Asian
unique(demo.sub3$subnum[demo.sub3$Race_Asian == 1 & !(is.na(demo.sub3$subnum))])
nrow(filter(demo.sub3, Race_White == 1))
nrow(filter(demo.sub3, Race_White == 1))
nrow(filter(demo.sub3, Race_Asian == 1))
nrow(filter(demo.sub3, Race_tive == 1))
nrow(filter(demo.sub3, Race_Black == 1))
nrow(filter(demo.sub3, Race_Island == 1))
nrow(filter(demo.sub3, Race_tive == 1))
nrow(filter(demo.sub3, Race_Black == 1))
nrow(filter(demo.sub3, Race_Island == 1))
nrow(filter(demo.sub3, Race_NoReply == 1))
sum(
nrow(filter(demo.sub3, Race_White == 1))
nrow(filter(demo.sub3, Race_Asian == 1))
nrow(filter(demo.sub3, Race_tive == 1))
nrow(filter(demo.sub3, Race_Black == 1))
nrow(filter(demo.sub3, Race_Island == 1))
nrow(filter(demo.sub3, Race_NoReply == 1))
)
sum(
nrow(filter(demo.sub3, Race_White == 1)),
nrow(filter(demo.sub3, Race_Asian == 1)),
nrow(filter(demo.sub3, Race_tive == 1)),
nrow(filter(demo.sub3, Race_Black == 1)),
nrow(filter(demo.sub3, Race_Island == 1)),
nrow(filter(demo.sub3, Race_NoReply == 1)),
)
sum(
nrow(filter(demo.sub3, Race_White == 1)),
nrow(filter(demo.sub3, Race_Asian == 1)),
nrow(filter(demo.sub3, Race_tive == 1)),
nrow(filter(demo.sub3, Race_Black == 1)),
nrow(filter(demo.sub3, Race_Island == 1)),
nrow(filter(demo.sub3, Race_NoReply == 1))
)
nrow(filter(demo.sub3, Race_White == 1))
nrow(filter(demo.sub3, Race_Asian == 1)
nrow(filter(demo.sub3, Race_tive == 1))
nrow(filter(demo.sub3, Race_Black == 1))
nrow(filter(demo.sub3, Race_Island == 1))
nrow(filter(demo.sub3, Race_NoReply == 1))
nrow(demo.sub3[demo.sub3$Hispanic == 1,]) # Hispanic
nrow(filter(demo.sub3, Race_White == 1))
nrow(filter(demo.sub3, Race_Asian == 1))
nrow(filter(demo.sub3, Race_tive == 1))
nrow(filter(demo.sub3, Race_Black == 1))
nrow(filter(demo.sub3, Race_Island == 1))
nrow(filter(demo.sub3, Race_NoReply == 1))
nrow(demo.sub3[demo.sub3$Hispanic == 1,]) # Hispanic
nrow(filter(demo.sub3, Race_White == 1))
nrow(filter(demo.sub3, Race_Asian == 1))
nrow(filter(demo.sub3, Race_tive == 1))
nrow(filter(demo.sub3, Race_Black == 1))
nrow(filter(demo.sub3, Race_Island == 1))
nrow(filter(demo.sub3, Race_NoReply == 1))
demo.sub2[demo.sub2$Race_tive +
demo.sub2$Race_Asian +
demo.sub2$Race_Black +
demo.sub2$Race_Island +
demo.sub2$Race_White == 10,]
unique(demo.sub2)
sum(is.na(unique(demo.sub2$subnum)))
demo.sub2[demo.sub2$Gender == 2,]
multi
dat = read.delim("ERN_noMiss_noArt_RTaccept_noBS.txt")
dat = read.delim("./4 quantified data/ERN_noMiss_noArt_RTaccept_noBS.txt")
require(dplyr)
head(dat)
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean, na.rm=T)) %>%
as.data.frame()
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean, na.rm=TRUE)) %>%
as.data.frame()
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean, na.rm=TRUE))
dat.sum = select(dat, Subject, MeanAmp)
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
View(dat.sum)
errors = read.delim("ErrorsPerCondition.txt")
head(errors)
errors$Total = errors$WT + errors$WG + errors$BT + errors$BG
head(errors)
head(dat.sum)
forCor = cbind(errors, dat.sum)
head(forCor)
View(forCor)
names(forCor)
r(forCor$Subject, forCor$Subject)
cor(forCor$Subject, forCor$Subject)
names(forCor[7])
names(forCor[7]) = "Subject1"
names(forCor)
names(forCor[7]) = "test"
names(forCor)
names(forCor)[7] = "Subject1"
names(forCor)
cor(forCor$Subject, forCor$Subject1)
ggplot(aes(Total, MeanAmp)) +
geom_point() +
geom_smooth(method="lm")
require(ggplot2)
ggplot(aes(Total, MeanAmp)) +
geom_point() +
geom_smooth(method="lm")
ggplot(aes(Total, MeanAmp), data = forCor) +
geom_point() +
geom_smooth(method="lm")
?cov.test
??cov.test
??cor.test
cor.test(forCor$Total, forCor$MeanAmp)
head(dat)
BT = filter(dat, Condition = "Black_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
BT = filter(dat, Condition == "Black_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBT = cbind(errors, BT)
ggplot(aes(BT, MeanAmp), data = forCorBT) +
geom_point() +
geom_smooth(method="lm")
unique(dat$Accuracy)
dat = read.delim("./4 quantified data/ERN_noMiss_noArt_RTaccept_noBS.txt") %>% filter(Accuracy == "incorrect")
unique(dat$Accuracy)
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
errors = read.delim("ErrorsPerCondition.txt")
errors$Total = errors$WT + errors$WG + errors$BT + errors$BG
forCor = cbind(errors, dat.sum)
ggplot(aes(Total, MeanAmp), data = forCor) +
geom_point() +
geom_smooth(method="lm")
cor.test(forCor$Total, forCor$MeanAmp)
BT = filter(dat, Condition == "Black_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBT = cbind(errors, BT)
ggplot(aes(BT, MeanAmp), data = forCorBT) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-tool errors")
cor.test(forCorBT$BT, forCorBT$MeanAmp)
ggplot(aes(Total, MeanAmp), data = forCor) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("All errors")
cor.test(forCor$Total, forCor$MeanAmp)
head(dat)
datcond = select(dat, -Race, -Object, -Accuracy, -Electrode, -Trial) %>%
group_by(Subject, Condition) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
head(datcond)
names(errors)
errors = rename(White_tool = WT,
Black_tool = BT,
White_gun = WG,
Black_gun = BG)
errors = rename(errors, White_tool = WT,
Black_tool = BT,
White_gun = WG,
Black_gun = BG)
head(errors)
datcond$numErr[datcond$Subject == k,1]
k = 1018
datcond$numErr[datcond$Subject == k,1]
datcond$numErr[datcond$Subject == k,]
datcond[datcond$Subject == k,]
datcond[datcond$Subject == k,1]
datcond[datcond$Subject == k,][1,]
errors[errors$Subject == k]
errors[errors$Subject == k, 2]
head(errors)
head(datcond)
datcond$numErr[datcond$Subject == k,][1] = errors[errors$Subject == k, 5] #Black-gun
errors[errors$Subject == k, 5]
errors[errors$Subject == k, 4]
datcond$numErr[datcond$Subject == k][1] = errors[errors$Subject == k, 5] #Black-gun
datcond$numErr[datcond$Subject == k][2] = errors[errors$Subject == k, 4] #Black-tool
datcond$numErr[datcond$Subject == k][3] = errors[errors$Subject == k, 3] #White-gun
datcond$numErr[datcond$Subject == k][4] = errors[errors$Subject == k, 2] #White-tool
head(datcond)
head(errors)
for (k in unique(datcond$Subject)) {
datcond$numErr[datcond$Subject == k][1] = errors[errors$Subject == k, 5] #Black-gun
datcond$numErr[datcond$Subject == k][2] = errors[errors$Subject == k, 4] #Black-tool
datcond$numErr[datcond$Subject == k][3] = errors[errors$Subject == k, 3] #White-gun
datcond$numErr[datcond$Subject == k][4] = errors[errors$Subject == k, 2] #White-tool
}
head(datcond)
ggplot(aes(numErr, MeanAmp, color="Condition"), data = datcond) +
geom_point() +
geom_smooth(method="lm")
class(datcond)
class(datcond$Condition)
ggplot(aes(numErr, MeanAmp, color=Condition), data = datcond) +
geom_point() +
geom_smooth(method="lm")
lmer(MeanAmp ~ Condition*numErr + (Condition|Subject), data = datcond)
require(lme4)
lmer(MeanAmp ~ Condition*numErr + (Condition|Subject), data = datcond)
lmer(MeanAmp ~ Condition*numErr + (1|Subject), data = datcond)
lmer(MeanAmp ~ Condition*numErr + (1|Subject), data = datcond) %>% summary()
BG = filter(dat, Condition == "Black_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBG = cbind(errors, BG)
ggplot(aes(BG, MeanAmp), data = forCorBG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-tool errors")
forCorBG
ggplot(aes(BG, MeanAmp), data = forCorBG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-gun errors")
dat = read.delim("./4 quantified data/ERN_noMiss_noArt_RTaccept_noBS.txt") %>% filter(Accuracy == "incorrect")
errors = read.delim("ErrorsPerCondition.txt")
errors$Total = errors$WT + errors$WG + errors$BT + errors$BG
BG = filter(dat, Condition == "Black_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBG = cbind(errors, BG)
ggplot(aes(BG, MeanAmp), data = forCorBG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-gun errors")
cor.test(forCorBG$BG, forCorBG$MeanAmp)
BT = filter(dat, Condition == "Black_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBT = cbind(errors, BT)
ggplot(aes(BT, MeanAmp), data = forCorBT) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-tool errors")
cor.test(forCorBT$BT, forCorBT$MeanAmp)
BG = filter(dat, Condition == "Black_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBG = cbind(errors, BG)
ggplot(aes(BG, MeanAmp), data = forCorBG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-gun errors")
cor.test(forCorBG$BG, forCorBG$MeanAmp)
WT = filter(dat, Condition == "White_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorWT = cbind(errors, WT)
ggplot(aes(WT, MeanAmp), data = forCorWT) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just White-tool errors")
cor.test(forCorWT$WT, forCorWT$MeanAmp)
WG = filter(dat, Condition == "White_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorWG = cbind(errors, WG)
ggplot(aes(WG, MeanAmp), data = forCorWG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just White-gun errors")
cor.test(forCorWG$WG, forCorWG$MeanAmp)
datcond = select(dat, -Race, -Object, -Accuracy, -Electrode, -Trial) %>%
group_by(Subject, Condition) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
errors = rename(errors, White_tool = WT,
Black_tool = BT,
White_gun = WG,
Black_gun = BG)
for (k in unique(datcond$Subject)) {
datcond$numErr[datcond$Subject == k][1] = errors[errors$Subject == k, 5] #Black-gun
datcond$numErr[datcond$Subject == k][2] = errors[errors$Subject == k, 4] #Black-tool
datcond$numErr[datcond$Subject == k][3] = errors[errors$Subject == k, 3] #White-gun
datcond$numErr[datcond$Subject == k][4] = errors[errors$Subject == k, 2] #White-tool
}
ggplot(aes(numErr, MeanAmp, color=Condition), data = datcond) +
geom_point() +
geom_smooth(method="lm")
errors = read.delim("ErrorsPerCondition.txt")
errors$Total = errors$WT + errors$WG + errors$BT + errors$BG
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCor = cbind(errors, dat.sum)
ggplot(aes(Total, MeanAmp), data = forCor) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("All errors")
cor.test(forCor$Total, forCor$MeanAmp)
ggplot(aes(numErr, MeanAmp), data = datcond) +
facet_wrap(~Condition) +
geom_point() +
geom_smooth(method="lm")
ggplot(aes(numErr, MeanAmp), data = datcond) +
facet_wrap(~Condition) +
geom_point() +
geom_smooth(method="lm") +
geom_text(Subject)
ggplot(aes(numErr, MeanAmp), data = datcond) +
facet_wrap(~Condition) +
geom_point() +
geom_smooth(method="lm") +
geom_label(aes(Subject))
ggplot(aes(numErr, MeanAmp), data = datcond) +
facet_wrap(~Condition) +
geom_point() +
geom_smooth(method="lm") +
geom_text(aes(label=Subject))
ggplot(aes(numErr, MeanAmp), data = datcond) + #2174 is outlier in Black-Gun trials
facet_wrap(~Condition) +
geom_point() +
geom_smooth(method="lm")
ggplot(aes(numErr, MeanAmp, color=Subject), data = datcond) + #2174 is outlier in Black-Gun trials
facet_wrap(~Condition) +
geom_point() +
geom_smooth(method="lm")
ggplot(aes(numErr, MeanAmp), data = datcond) + #2174 is outlier in Black-Gun trials
facet_wrap(~Condition) +
geom_point() +
geom_smooth(method="lm")
ggsave("Figure_CorrelationBetweenNumErrorsAndERN.tiff")
dat = read.delim("./4 quantified data/ERN_noMiss_noArt_RTaccept_noBS.txt") %>% filter(Accuracy == "incorrect")
errors = read.delim("ErrorsPerCondition.txt")
errors$Total = errors$WT + errors$WG + errors$BT + errors$BG
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCor = cbind(errors, dat.sum)
ggplot(aes(Total, MeanAmp), data = forCor) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("All errors")
cor.test(forCor$Total, forCor$MeanAmp)
BT = filter(dat, Condition == "Black_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBT = cbind(errors, BT)
ggplot(aes(BT, MeanAmp), data = forCorBT) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-tool errors")
cor.test(forCorBT$BT, forCorBT$MeanAmp)
BG = filter(dat, Condition == "Black_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBG = cbind(errors, BG)
ggplot(aes(BG, MeanAmp), data = forCorBG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-gun errors")
cor.test(forCorBG$BG, forCorBG$MeanAmp)
WT = filter(dat, Condition == "White_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorWT = cbind(errors, WT)
ggplot(aes(WT, MeanAmp), data = forCorWT) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just White-tool errors")
cor.test(forCorWT$WT, forCorWT$MeanAmp)
WG = filter(dat, Condition == "White_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorWG = cbind(errors, WG)
ggplot(aes(WG, MeanAmp), data = forCorWG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just White-gun errors")
cor.test(forCorWG$WG, forCorWG$MeanAmp)
filter(dat, Condition == "Black_gun")
BG = filter(dat, Condition == "Black_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
head(BG)
errors = read.delim("ErrorsPerCondition.txt")
errors$Total = errors$WT + errors$WG + errors$BT + errors$BG
dat.sum = select(dat, Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCor = cbind(errors, dat.sum)
ggplot(aes(Total, MeanAmp), data = forCor) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("All errors")
cor.test(forCor$Total, forCor$MeanAmp)
BT = filter(dat, Condition == "Black_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBT = cbind(errors, BT)
ggplot(aes(BT, MeanAmp), data = forCorBT) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-tool errors")
cor.test(forCorBT$BT, forCorBT$MeanAmp)
BG = filter(dat, Condition == "Black_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorBG = cbind(errors, BG)
ggplot(aes(BG, MeanAmp), data = forCorBG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just Black-gun errors")
cor.test(forCorBG$BG, forCorBG$MeanAmp)
WT = filter(dat, Condition == "White_tool") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorWT = cbind(errors, WT)
ggplot(aes(WT, MeanAmp), data = forCorWT) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just White-tool errors")
cor.test(forCorWT$WT, forCorWT$MeanAmp)
WG = filter(dat, Condition == "White_gun") %>%
select(Subject, MeanAmp) %>%
group_by(Subject) %>%
summarise_each(funs(mean(., na.rm=TRUE))) %>%
as.data.frame()
forCorWG = cbind(errors, WG)
ggplot(aes(WG, MeanAmp), data = forCorWG) +
geom_point() +
geom_smooth(method="lm") +
ggtitle("Just White-gun errors")
cor.test(forCorWG$WG, forCorWG$MeanAmp)
